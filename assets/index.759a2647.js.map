{"version":3,"file":"index.759a2647.js","sources":["../../src/components/molecules/Section/index.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport 'twin.macro';\n\nexport interface SectionProps extends React.PropsWithChildren {\n  sectionTitle?: string;\n  title?: string;\n  image?: string;\n  items: Array<{ subTitle?: string; contents?: string | string[] }>;\n  captions?: ReactElement[];\n}\n\nconst Section = ({\n  sectionTitle,\n  title,\n  image,\n  items,\n  captions,\n}: SectionProps) => {\n  return (\n    <div tw=\"w-full grid grid-cols-1 md:grid-cols-[1fr_2fr] max-w-screen-xl mx-auto my-16\">\n      {/* section title */}\n      <div tw=\"md:text-4xl text-2xl mb-8\">{sectionTitle}</div>\n\n      {/* units */}\n      <div tw=\"grid gap-y-4\">\n        {/* sub title */}\n        {title && (\n          <h4 tw=\"md:text-3xl text-xl font-bold text-blue-900\">{title}</h4>\n        )}\n        {title && <hr />}\n\n        {image && <img tw=\"w-[450px]\" src={image} alt=\"_\" />}\n\n        {items.map((item) => {\n          return (\n            <>\n              <h5 tw=\"md:text-2xl text-lg mb-2 font-bold leading-10!\">\n                {item.subTitle}\n              </h5>\n              {Array.isArray(item.contents) ? (\n                <ul tw=\"list-disc mx-6 grid gap-y-1\">\n                  {item.contents.map((content) => {\n                    return <li tw=\"text-xl mx-8 my-1.5\">{content}</li>;\n                  })}\n                </ul>\n              ) : (\n                <pre tw=\"text-base mx-1 whitespace-pre-wrap\">\n                  {item.contents?.trim()}\n                </pre>\n              )}\n            </>\n          );\n        })}\n        {captions}\n      </div>\n    </div>\n  );\n};\n\nexport default Section;\n"],"names":["Section","__name","sectionTitle","title","image","items","_jsxs","_StyledDiv","_jsx","_StyledDiv2","_StyledH","item","_Fragment","_StyledH2","subTitle","content","_StyledLi","_StyledPre","_a","captions","Section$1","_styled","_StyledDiv3","_StyledImg","_StyledUl"],"mappings":"sMAWA,MAAAA,EAAAC,EAAA,CAAA,CAAiB,aAAAC,EACfA,MAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,SAAAA,CAEY,IACZC,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAAC,EAAA,CAEE,SAAAP,CAAqCA,CAAAA,EAAAA,EAAAA,EAAAA,CAGrC,SAAA,CAAAC,GAAAK,EAAAE,EAAA,CAGI,SAAAP,CAAsDA,CAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAI9C,IAAAC,EAAyBA,IAAAA,GAAW,CAAA,EAAAC,EAAA,IAAAM,GAAA,OAG5C,OAAAL,EAAAM,EAAA,CACE,SAAA,CAAAJ,EAAAK,EAAA,CACE,SAAAF,EAAA,QACQG,CAAAA,EAAAA,MAAAA,QAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,CAGN,SAAAH,EAAA,SAAA,IAAAI,GAEIP,EAAAQ,EAAA,CAAO,SAAAD,CAA8BA,CAAAA,CAAa,CACnD,CAAA,EAAAP,EAAAS,EAAA,CAGH,UAAAC,EAAAP,EAAA,WAAA,YAAAO,EAAA,MACsB,CAAA,CAAA,CAEvB,CAAA,CACA,CAAA,EAAAC,CAAA,CAGE,CAAA,CAAA,CACL,CAAA,EA3CZ,WAgDAC,EAAApB,EAAuB,IAAAO,EAAAc,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,OAAA,YAAA,OAAA,UAAA,OAAA,aAAA,OAAA,QAAA,OAAA,MAAA,OAAA,SAAA,SAAA,oBAAA,4BAAA,4BAAA,CAAA,oBAAA,SAAA,CAAA,CAAA,EAAAZ,EAAAY,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,uBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,aAAA,OAAA,SAAA,SAAA,WAAA,OAAA,4BAAA,CAAA,SAAA,UAAA,WAAA,QAAA,CAAA,CAAA,EAAAC,EAAAD,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,uBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,QAAA,OAAA,OAAA,MAAA,CAAA,EAAAX,EAAAW,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,oBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,SAAA,UAAA,WAAA,UAAA,WAAA,MAAA,oBAAA,IAAA,MAAA,0CAAA,4BAAA,CAAA,SAAA,WAAA,WAAA,SAAA,CAAA,CAAA,EAAAE,EAAAF,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,MAAA,OAAA,CAAA,EAAAR,EAAAQ,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,aAAA,SAAA,SAAA,WAAA,WAAA,oBAAA,WAAA,MAAA,4BAAA,CAAA,SAAA,SAAA,WAAA,MAAA,CAAA,CAAA,EAAAG,EAAAH,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,SAAA,YAAA,SAAA,QAAA,OAAA,cAAA,OAAA,OAAA,SAAA,CAAA,EAAAL,EAAAK,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,OAAA,YAAA,OAAA,UAAA,WAAA,aAAA,WAAA,SAAA,UAAA,WAAA,SAAA,CAAA,EAAAJ,EAAAI,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,UAAA,YAAA,UAAA,WAAA,WAAA,SAAA,OAAA,WAAA,QAAA,CAAA"}