{"version":3,"file":"index.6113ac8b.js","sources":["../../src/components/molecules/Section/index.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport 'twin.macro';\n\nexport interface SectionProps extends React.PropsWithChildren {\n  sectionTitle: string;\n  title?: string;\n  image?: string;\n  items: Array<{ subTitle?: string; contents: string | string[] }>;\n  captions?: ReactElement[];\n}\n\nconst Section = ({\n  sectionTitle,\n  title,\n  image,\n  items,\n  captions,\n}: SectionProps) => {\n  return (\n    <div tw=\"w-full grid md:grid-cols-2 sm:grid-cols-1 max-w-screen-xl mx-auto\">\n      {/* section title */}\n      <div tw=\"md:text-3xl text-2xl mb-8\">{sectionTitle}</div>\n\n      {/* units */}\n      <div tw=\"grid gap-y-4\">\n        {/* sub title */}\n        {title && <h4 tw=\"md:text-2xl text-xl font-medium\">{title}</h4>}\n        {title && <hr />}\n\n        {image && <img tw=\"w-[450px]\" src={image} alt=\"_\" />}\n\n        {items.map((item) => {\n          return (\n            <>\n              <h5 tw=\"md:text-xl text-lg mb-2\">{item.subTitle}</h5>\n              {Array.isArray(item.contents) ? (\n                <ul tw=\"list-disc mx-6 grid gap-y-1\">\n                  {item.contents.map((content) => {\n                    return <li tw=\"text-base\">{content}</li>;\n                  })}\n                </ul>\n              ) : (\n                <pre tw=\"text-base mx-1 whitespace-pre-wrap\">\n                  {item.contents.trim()}\n                </pre>\n              )}\n            </>\n          );\n        })}\n        {captions}\n      </div>\n    </div>\n  );\n};\n\nexport default Section;\n"],"names":["Section","__name","sectionTitle","title","image","items","_jsxs","_StyledDiv","_jsx","_StyledDiv2","_StyledH","item","_Fragment","_StyledH2","subTitle","content","_StyledLi","_StyledPre","captions","Section$1","_styled","_StyledDiv3","_StyledImg","_StyledUl"],"mappings":"2MAWA,MAAAA,EAAAC,EAAA,CAAA,CAAiB,aAAAC,EACfA,MAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,SAAAA,CAEY,IACZC,EAAAC,EAAA,CACE,SAAA,CAAAC,EAAAC,EAAA,CAEE,SAAAP,CAAqCA,CAAAA,EAAAA,EAAAA,EAAAA,CAGrC,SAAA,CAAAC,GAAAK,EAAAE,EAAA,CAEY,SAAAP,CAA0CA,CAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAG1C,IAAAC,EAAyBA,IAAAA,GAAW,CAAA,EAAAC,EAAA,IAAAM,GAG5CL,EAAAM,EAAA,CACE,SAAA,CAAAJ,EAAAK,EAAA,CACE,SAAAF,EAAA,QAAuCG,CAAAA,EAAAA,MAAAA,QAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,CAErC,SAAAH,EAAA,SAAA,IAAAI,GAEIP,EAAAQ,EAAA,CAAO,SAAAD,CAAoBA,CAAAA,CAAa,CACzC,CAAA,EAAAP,EAAAS,EAAA,CAGH,SAAAN,EAAA,SAAA,KAAA,CACqB,CAAA,CAAA,CAEtB,CAAA,CACA,EAAAO,CAAA,CAGE,CAAA,CAAA,CACL,CAAA,EAvCZ,WA4CAC,EAAAnB,EAAuB,IAAAO,EAAAa,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,OAAA,YAAA,OAAA,QAAA,OAAA,MAAA,OAAA,SAAA,SAAA,4BAAA,CAAA,oBAAA,2BAAA,EAAA,4BAAA,CAAA,oBAAA,2BAAA,CAAA,CAAA,EAAAX,EAAAW,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,uBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,aAAA,OAAA,SAAA,SAAA,WAAA,OAAA,4BAAA,CAAA,SAAA,WAAA,WAAA,SAAA,CAAA,CAAA,EAAAC,EAAAD,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,uBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,QAAA,OAAA,OAAA,MAAA,CAAA,EAAAV,EAAAU,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,oBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,SAAA,UAAA,WAAA,UAAA,WAAA,MAAA,4BAAA,CAAA,SAAA,SAAA,WAAA,MAAA,CAAA,CAAA,EAAAE,EAAAF,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,MAAA,OAAA,CAAA,EAAAP,EAAAO,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,aAAA,SAAA,SAAA,WAAA,WAAA,UAAA,4BAAA,CAAA,SAAA,UAAA,WAAA,SAAA,CAAA,CAAA,EAAAG,EAAAH,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,SAAA,YAAA,SAAA,QAAA,OAAA,cAAA,OAAA,OAAA,SAAA,CAAA,EAAAJ,EAAAI,EAAA,IAAA,EAAA,WAAA,CAAA,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,SAAA,OAAA,WAAA,QAAA,CAAA,EAAAH,EAAAG,EAAA,KAAA,EAAA,WAAA,CAAA,YAAA,sBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,UAAA,YAAA,UAAA,WAAA,WAAA,SAAA,OAAA,WAAA,QAAA,CAAA"}